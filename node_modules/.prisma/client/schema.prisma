// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid()) @db.VarChar(30)
  name        String    @db.VarChar(255)
  surname     String?   @db.VarChar(255)
  username    String?   @unique @db.VarChar(30)
  password    String?   @db.VarChar(255)
  phoneNumber String?   @unique @db.VarChar(30)
  isAdmin     Boolean   @default(false)
  role        String    @default("USER")
  permissions Json
  basket      Basket?
  rating      Rating[]
  session     Session[]
}

model Session {
  id        String    @id @default(cuid()) @db.VarChar(30)
  token     String    @unique @db.VarChar(255)
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?   @db.VarChar(30)
  createdAt DateTime  @default(now())
  expiresAt DateTime?
}

model Basket {
  id           String         @id @default(cuid()) @db.VarChar(30)
  user         User           @relation(fields: [userId], references: [id])
  userId       String         @unique @db.VarChar(30)
  basketDevice BasketDevice[]
}

model BasketDevice {
  basket   Basket @relation(fields: [basketId], references: [id])
  basketId String @db.VarChar(30)
  device   Device @relation(fields: [deviceId], references: [id])
  deviceId String @db.VarChar(30)

  @@id([basketId, deviceId])
}

model Device {
  id         String         @id @default(cuid()) @db.VarChar(30)
  name       String         @db.VarChar(255)
  price      String         @db.VarChar(255)
  rate       Int            @db.Integer()
  pathImg    String?         @db.VarChar(255)
  devices    BasketDevice[]
  deviceInfo DeviceInfo[]
  rating     Rating[]
  type       Type?          @relation(fields: [typeId], references: [id])
  typeId     String?        @db.VarChar(30)
  brand      Brand?         @relation(fields: [brandId], references: [id])
  brandId    String?        @db.VarChar(30)
}

model DeviceInfo {
  id          String @id @default(cuid()) @db.VarChar(30)
  device      Device @relation(fields: [deviceId], references: [id])
  deviceId    String @db.VarChar(30)
  title       String @db.VarChar(255)
  description String @db.VarChar(255)
}

model Rating {
  id       String @id @default(cuid()) @db.VarChar(30)
  rate     Int
  user     User   @relation(fields: [userId], references: [id])
  userId   String @db.VarChar(30)
  device   Device @relation(fields: [deviceId], references: [id])
  deviceId String @db.VarChar(30)
}

model Type {
  id     String      @id @default(cuid()) @db.VarChar(30)
  name   String      @db.VarChar(255)
  device Device[]
  brand  TypeBrand[]
}

model Brand {
  id     String      @id @default(cuid()) @db.VarChar(30)
  name   String      @db.VarChar(255)
  device Device[]
  type   TypeBrand[]
}

model TypeBrand {
  id      String  @id @default(cuid()) @db.VarChar(30)
  type    Type?   @relation(fields: [typeId], references: [id])
  typeId  String? @db.VarChar(30)
  brand   Brand?  @relation(fields: [brandId], references: [id])
  brandId String? @db.VarChar(30)
}
